
[VarDef,dllPath,""]//path to dll
[VarDef,err,0]//standard error
[VarDef,ver,0]//version
[VarDef,stringArg,""]
[VarDef,responseString,""]

[RoutineDef,CheckSystem,
	/* check if on pc */
    [If, [ZBrushInfo, 6] == 0,
        [VarSet, dllPath, [FileNameResolvePath, "build\Release\zsocket.dll"]]
    , /* Else */
        [VarSet, dllPath, [FileNameResolvePath, "zsocket.dll"]]
    ]
	[If,[FileExists,dllPath],
		,
		[Note,"DLL is missing"][Exit]
	]
]


[IButton, "GetSocketAddr",,
	[RoutineCall,CheckSystem]
	[MemCreate, addr, 256, 0]
	[VarSet, err, [FileExecute,[Var,dllPath],"GetSocketAddr",,,,addr]]
	[If, err,
		[Note, [StrMerge, "Mem Block too Small  ", err]]
		[Exit]
	,
		[VarSet, addrStr, ""]
		[MemReadString, addr, addrStr]
		[Note, addrStr]
		[MemDelete, addr]
	]
]

[IButton, "SetSocketAddr",,
	[RoutineCall,CheckSystem]
	[MemCreate, addr, 256, 0]
	[VarSet, err, [FileExecute,[Var,dllPath],"SetSocketAddr", "127.0.0.1:6001"]]
	[If, err,
		[Note, "Invalid address"]
		[Exit]
	]
]

[IButton, "SocketSend",,
	[RoutineCall,CheckSystem]
	[MemCreate, output, 256, 0]
	
	[VarSet, err, [FileExecute,[Var,dllPath],"SocketSend", "cmds.createNode('transform')",,,output]]
	[VarSet, outStr, ""]
	[MemReadString, output, outStr]
	[MemDelete, output]
	[If, err,
		[Note, [StrMerge, "Error Occured: ", outStr, err]]
	,
		[Note, outStr]
	]
]


[IButton,"Test Version","Test DLL Version function",
	[RoutineCall,CheckSystem]
	[MemCreate, output, 256, 0]

	[VarSet, err, [FileExecute, [Var,dllPath], "Version",,,, output]]

	[VarSet, version, ""]
	[MemReadString, output, version]
	[MemDelete, output]

	[If, err,
		[Note, [StrMerge, "Error Occured: ", err]]
	,
		[Note, [StrMerge, "This DLL is version: ", [Var, version]]]
	]
]
